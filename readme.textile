h1. "Avalanche2D-JS":http://stepheneb.github.com/avalanche2d-js/avalanche2d.html

A partial "JavaScript port":http://stepheneb.github.com/avalanche2d-js/avalanche2d.html of Bob Tinker's "NetLogo":http://ccl.northwestern.edu/netlogo/ model "Bureaucrats.v6":http://stepheneb.github.com/avalanche2d-js/nlogo/Bureaucrats.v6.nlogo exploring "Self-Organised Criticality":http://en.wikipedia.org/wiki/Self-organized_criticality

bq. The mathematics of avalanche size and frequency follows a power law that can be simulated to
    a first approximation by any system that exhibits self-organized criticality (SOC). In "How
    Nature Works"" Per Bak reports a simplified model of a sandpile that he, Chao Tang, and Curt
    Wiesenfeld developed that shows SOC, the so-called BTW model. Bak also mentions that
    Grassberger describes a representation of this model that is fanciful but equivalent to the
    BTW model. Imagine an N-by-N grid of office desks and a bureaucrat sitting at each. A folder
    is randomly assigned to one desk. The bureaucrat does nothing until four or more folders are
    on his desk at which time he sends one to each of his four nearest neighbors. Any bureaucrat
    sitting at the edge of this array throws a folder out the window if there is no desk to send
    it to. Sometimes, adding one folder can cause multiple redistributions of folders as one
    bureaucrat's actions causes neighbors to exceed three folders, which then ripples through
    the office. In principle, just adding one new folder might involve redistribution at every
    desk, sometimes multiple times.

**The screen after approximately 5000 avalanches.**

!http://stepheneb.github.com/avalanche2d-js/images/screenshot.png(screenshot of avalanche2d-js)!:http://stepheneb.github.com/avalanche2d-js/avalanche2d.html

I'm working on new ways of being able to create and run models in html5 browser-technologies that we used to build with Java and wanted to see how hard it would be to convert one of Bob's NetLogo models. The avalanche/bureaucrat model was a good first choice because it only uses the patches feature of NetLogo and not turtles.

While it would take a good deal more work to make a whole authoring environment that would be effective and productive for non-professional programmers I think this is a very successful proof-of-concept. At this point I think it would be relatively easy to convert a model that had turtles also.

h2. References

# "Review of: How Nature Works: The Science of Self-Organised Criticality, Per Bak, New York, NY: Copernicus Press 1996":http://jasss.soc.surrey.ac.uk/4/4/reviews/bak.html
# "Self organized criticality in earth systems By Stefan Hergarten, page 94":http://books.google.com/books?id=eBZbupdVnYAC&pg=PA94&lpg=PA94&dq=Grassberger++bureaucrat&source=bl&ots=XR7W1E61Wa&sig=06HmPg4d9YyBUz63RIphjUza1ik&hl=en&ei=MxGVTvThPIjk0QG4npnGBw&sa=X&oi=book_result&ct=result&resnum=1&ved=0CBoQ6AEwAA#v=onepage&q=Grassberger%20%20bureaucrat&f=false
# "On the avalanche size distribution in the BTW model":http://www.cmth.ph.ic.ac.uk/people/k.christensen/papers/preprints/preprint_btw.pdf
# "Wikipedia: Self-Organised Criticality":http://en.wikipedia.org/wiki/Self-organized_criticality

h2. Benchmarks

h3. Time for modeling and rendering to both the model canvas and the graph rendered into SVG using d3.js.

|_. Mac OS X 10.6.8          |_\3>.       ave rate (steps/s) at 5000 steps |_\3>. duration of step at model step number |
|_. Browser                  |_. on |_. graph off |_. graph and canvas off |_.        100 |_.       2500 |_.       5000 |
| WebKit nightly rev97458    |  121 |         160 |                    236 |            4 |            5 |            4 |
| Safari v5.1 (6534.50)      |  110 |         141 |                    227 |            4 |            5 |            5 |
| FireFox 7.0.1              |   67 |         166 |                    242 |            6 |           11 |           39 |
| FireFox Nightly 10.0a1     |   62 |         193 |                    247 |            6 |           15 |           48 |
| Chrome 16.0.908.0 canary   |   51 |         195 |                    232 |            6 |           16 |           49 |
| Chrome 14.0.835.186        |   58 |         198 |                    230 |            5 |           16 |           49 |

|_. Windows 7 in VirtualBox  |_\3>.       ave rate (steps/s) at 5000 steps |
|_. Browser                  |_. on |_. graph off |_. graph and canvas off |
| Safari v5.1.1 (7534.51.22) |  162 |         155 |                    226 |
| Chrome 16.0.907.0 canary   |   77 |         153 |                    199 |
| Chrome 14.0.835.202        |   93 |         101 |                    199 |
| FireFox 7.0.1              |   51 |          90 |                    127 |
| FireFox Nightly 10.0a1     |   55 |          93 |                    112 |
| IE v9.0.8112.16421         |   59 |          65 |                     64 |

_All these tests were run on a MacBook Pro, 2.66 GHz Intel Core i7, Mac OS X 10.6.8 on October 14, 2011._

On the same computer using NetLogo 5.0.rc1 the model averaged 21 samples/s when run for 5000 avalanche model steps.

