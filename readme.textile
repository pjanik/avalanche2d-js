h1. "Avalanche2D-JS":http://stepheneb.github.com/avalanche2d-js/avalanche2d.html

A partial "JavaScript adaptation":http://stepheneb.github.com/avalanche2d-js/avalanche2d.html of Bob Tinker's "NetLogo":http://ccl.northwestern.edu/netlogo/ model "Bureaucrats.v6":http://stepheneb.github.com/avalanche2d-js/nlogo/Bureaucrats.v6.nlogo exploring "Self-Organised Criticality":http://en.wikipedia.org/wiki/Self-organized_criticality

bq. The mathematics of avalanche size and frequency follows a power law that can be simulated to
    a first approximation by any system that exhibits self-organized criticality (SOC). In "How
    Nature Works"" Per Bak reports a simplified model of a sandpile that he, Chao Tang, and Curt
    Wiesenfeld developed that shows SOC, the so-called BTW model. Bak also mentions that
    Grassberger describes a representation of this model that is fanciful but equivalent to the
    BTW model. Imagine an N-by-N grid of office desks and a bureaucrat sitting at each. A folder
    is randomly assigned to one desk. The bureaucrat does nothing until four or more folders are
    on his desk at which time he sends one to each of his four nearest neighbors. Any bureaucrat
    sitting at the edge of this array throws a folder out the window if there is no desk to send
    it to. Sometimes, adding one folder can cause multiple redistributions of folders as one
    bureaucrat's actions causes neighbors to exceed three folders, which then ripples through
    the office. In principle, just adding one new folder might involve redistribution at every
    desk, sometimes multiple times.

**The screen after approximately 5000 avalanches.**

!http://stepheneb.github.com/avalanche2d-js/images/screenshot.png(screenshot of avalanche2d-js)!:http://stepheneb.github.com/avalanche2d-js/avalanche2d.html

I'm working on new ways of being able to create and run models in html5 browser-technologies that we used to build with Java and wanted to see how hard it would be to convert one of Bob's NetLogo models. The avalanche/bureaucrat model was a good first choice because it only uses the patches feature of NetLogo and not turtles.

While it would take a good deal more work to make a whole authoring environment that would be effective and productive for non-professional programmers I think this is a very successful proof-of-concept. At this point I think it would be relatively easy to convert a model that had turtles also.

h2. Benchmarks

Seth Tisue, the lead NetLogo developer contributed both "Bureaucrats-fast":http://stepheneb.github.com/avalanche2d-js/nlogo/Bureaucrats-fast.nlogo a simplified re-write of "Bureaucrats.v6":http://stepheneb.github.com/avalanche2d-js/nlogo/Bureaucrats.v6.nlogo that runs about 20 times as fast as the original and a version of the model algorithm written in
straight Scala "Bureaucrats.scala":nlogo/Bureaucrats-fast.nlogo. The speed of the Scala version should be comparable to the speed of a native Java adaptation.

Testing  Oct 28 2011 show this JavaScript adaptation runs the model about the same speed as the native Scala version and about 12 times faster than "Bureaucrats-fast":logo/Bureaucrats-fast.nlogo" in NetLogo 5.0RC2. When displaying the folder visualization and graphing the JavaScript adaptation is 
about 18 times faster (_Chrome 14.0.835.186 on a Mac OS X 10.6.8 system with a 2.66 GHz Intel Core i7_). 

A Google Spreadsheet is available with more complete "Avalanche2D-JS Benchmarks":https://docs.google.com/spreadsheet/ccc?key=0AtvlFoSBUC5kdDM4cHJhU0I4NGg5TjlWRkQ0ZExpcGc comparing the performance of the model and the model, visualization, and grapher in Scala and NetLogo and on various browsers and operating systems including Android and iOS tablets and smartphone systems.

h2. Self-Organised Criticality References

# "Review of: How Nature Works: The Science of Self-Organised Criticality, Per Bak, New York, NY: Copernicus Press 1996":http://jasss.soc.surrey.ac.uk/4/4/reviews/bak.html
# "Self organized criticality in earth systems By Stefan Hergarten, page 94":http://books.google.com/books?id=eBZbupdVnYAC&pg=PA94&lpg=PA94&dq=Grassberger++bureaucrat&source=bl&ots=XR7W1E61Wa&sig=06HmPg4d9YyBUz63RIphjUza1ik&hl=en&ei=MxGVTvThPIjk0QG4npnGBw&sa=X&oi=book_result&ct=result&resnum=1&ved=0CBoQ6AEwAA#v=onepage&q=Grassberger%20%20bureaucrat&f=false
# "On the avalanche size distribution in the BTW model":http://www.cmth.ph.ic.ac.uk/people/k.christensen/papers/preprints/preprint_btw.pdf
# "Wikipedia: Self-Organised Criticality":http://en.wikipedia.org/wiki/Self-organized_criticality

h2. Programming References

# "Efficient Script Yielding":http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html
# "setImmediate":https://github.com/NobleJS/setImmediate
# "W3C: Timing control for script-based animations":http://www.w3.org/TR/animation-timing/
# "W3C: Real-Time Web Communications Working Group":http://www.w3.org/2011/04/webrtc/wiki/Main_Page
# "Real-Time Web Communication Use-cases and Requirements":http://tools.ietf.org/html/draft-ietf-rtcweb-use-cases-and-requirements-06
# "W3C: Audio Working Group":http://www.w3.org/2011/audio/charter/"
# "Beyond HTML5 Audio Capture in Web Browsers":https://labs.ericsson.com/developer-community/blog/beyond-html5-audio-capture-web-browsers
# "W3C: Web Audio API":https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html
# "Web Audio Examples":http://chromium.googlecode.com/svn/trunk/samples/audio/index.html

